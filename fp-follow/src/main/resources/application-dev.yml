management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  server:
    port: 10001
    address: 127.0.0.1


server:
  port: ${SERVER_PORT:8081}



spring:
  datasource:
    username: ${FOLLOW_DB_USERNAME}
    password: ${FOLLOW_DB_PASSWORD}
    url: ${FOLLOW_DB_URL}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      naming:
        # Use CamelCase to Underscores Naming Strategy
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
      ddl-auto: none
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: false
        dialect: org.hibernate.dialect.PostgreSQLDialect


# logging configuration
logging:
  level:
    org.hibernate.SQL: INFO
#    org.hibernate.orm.jdbc.bind: TRACE
    org.springframework.web.client: INFO
    com.fp: DEBUG
    com.fp.auth.filter: INFO




springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha #Sort tags alphabetically
    operations-sorter: method #Sort operations by method name
    display-request-duration: true #Display request duration in the UI
    try-it-out-enabled: false #Fold "Try it out" feature as default


services:
  follow:
    enabled: false

fp:
  aws:
    dynamodb:
      region: ${AWS_REGION}
      table-prefix: ${DYNAMODB_TABLE_PREFIX}
      table-suffix: ${DYNAMODB_TABLE_SUFFIX}
    sqs:
      region: ${AWS_REGION}
      email-queue:
        queue-url: ${SQS_EMAIL_QUEUE_URL}
      dead-letter-queue:
        queue-url: ${SQS_DEAD_LETTER_QUEUE_URL}
      follower-notification-queue:
        queue-url: ${SQS_FOLLOWER_NOTIFICATION_QUEUE_URL}
  jwt:
    secret: ${JWT_SECRET}
