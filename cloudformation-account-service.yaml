AWSTemplateFormatVersion: '2010-09-09'
Description: Financial Pulse Account Service Infrastructure

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - test
      - prod
    Description: Environment name
  LatestAmiId:
    Description: The latest Amazon Linux 2 AMI from the Parameter Store
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2

  InstanceType:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t3.micro
    Description: EC2 Instance type
  MyIP:
    Description: Your IP address in CIDR format (e.g. 203.0.113.1/32).
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: ^(\d{1,3}\.){3}\d{1,3}\/\d{1,2}$
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

Resources:
  AccountServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
      Tags:
        - Key: Name
          Value: !Sub fp-account-role-${Environment}
        - Key: Service
          Value: account

  #DynamoDB table for accounts
  AccountTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: fp-account-dev
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: email
          AttributeType: S
        - AttributeName: account_id
          AttributeType: S
      KeySchema:
        - AttributeName: email
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: account-id-index
          KeySchema:
            - AttributeName: account_id
              KeyType: HASH
          Projection:
            ProjectionType: ALL
  # Security Group for EC2
  AccountServiceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Account Service
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: !Ref MyIP
          Description: Application port

        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
          Description: SSH access

  AccountServiceInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref AccountServiceRole
  AccountServiceInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref LatestAmiId
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref AccountServiceInstanceProfile
      KeyName: fp-keypair
      SecurityGroupIds:
        - !Ref AccountServiceSecurityGroup
      UserData: !Base64
        Fn::Sub: |
          #!/bin/bash
          yum update -y
          yum install java-17-amazon-corretto-headless wget

          # Create app directory
          mkdir -p /opt/app
          cd /opt/app

          # Download your JAR (you'll need to upload it somewhere first)
          # For now, just create placeholder
          echo "Ready for application deployment" > /opt/app/status.txt

      Tags:
        - Key: Name
          Value: fp-account-service-${Environment}
Outputs:
  InstancePublicIP:
    Description: Public IP of the EC2 instance
    Value: !GetAtt AccountServiceInstance.PublicIp

  AccountTableName:
    Description: Name of the DynamoDB table
    Value: !Ref AccountTable

  SSHCommand:
    Description: SSH command to connect to the instance
    Value: !Sub "ssh -i fp-keypair.pem ec2-user@${AccountServiceInstance.PublicIp}"


  ServiceEndpoint:
    Description: Service endpoint
    Value: !Sub "http://${AccountServiceInstance.PublicIp}:8080"