AWSTemplateFormatVersion: '2010-09-09'
Description: Financial Pulse CloudWatch Infrastructure

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, test, prod]
  RetentionInDays:
    Type: Number
    Default: 14
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 180, 365]

  AlertEmail:
    Type: String
    Description: Email address to receive CloudWatch alerts
    Default: "tianli0927@gmail.com"
  AccountServiceInstanceId:
    Type: String
    Description: "Account Service EC2 Instance ID"


Resources:
  # SNS Topic for Alerts
  AlertsTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub FinancialPulse-Alerts-${Environment}
      DisplayName: !Sub Financial Pulse ${Environment} Alerts
      Subscription:
        - Protocol: email
          Endpoint: !Ref AlertEmail
      FifoTopic: false
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Purpose
          Value: monitoring-alerts

  # Log Groups for Application Services
  FinancialPulseApplicationLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/ec2/financial-pulse/application/${Environment}
      RetentionInDays: !Ref RetentionInDays
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: LogType
          Value: application
  # CloudWatch Dashboards
  FinancialPulseOverviewDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: !Sub FinancialPulse-Overview-${Environment}
      DashboardBody: !Sub |
        {
          "widgets": [
            {
              "type": "metric",
              "x": 0,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/EC2", "CPUUtilization", "InstanceId", "${AccountServiceInstanceId}" ],
                  [ "CWAgent", "cpu_usage_user", "InstanceId", "${AccountServiceInstanceId}'"]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "EC2 CPU Utilization",
                "period": 300
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 6,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "CWAgent", "mem_used_percent", "InstanceId", "${AccountServiceInstanceId}" ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "Memory Utilization",
                "period": 300
              }
            },
            {
              "type": "log",
              "x": 0,
              "y": 12,
              "width": 24,
              "height": 6,
              "properties": {
                "query": "SOURCE '/aws/ec2/financial-pulse/application/${Environment}' | fields @timestamp, @message, @logStream\n| filter @logStream like /account-service/\n| sort @timestamp desc\n| limit 100",
                "region": "${AWS::Region}",
                "title": "Recent Application Logs - Account Service"
              }
            },
            {
              "type": "log",
              "x": 0,
              "y": 18,
              "width": 24,
              "height": 6,
              "properties": {
                "query": "SOURCE '/aws/ec2/financial-pulse/application/${Environment}' | fields @timestamp, @message, @logStream\n| filter @logStream like /follow-service/\n| sort @timestamp desc\n| limit 100",
                "region": "${AWS::Region}",
                "title": "Recent Application Logs - Follow Service"
              }
            },
            {
              "type": "log",
              "x": 0,
              "y": 24,
              "width": 24,
              "height": 6,
              "properties": {
                "query": "SOURCE '/aws/ec2/financial-pulse/application/${Environment}' | fields @timestamp, @message, @logStream\n| sort @timestamp desc\n| limit 200",
                "region": "${AWS::Region}",
                "title": "All Application Logs - All Services"
              }
            }
          ]
        }

  # CloudWatch Alarms for Critical Metrics
  HighCPUAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub FinancialPulse-HighCPU-${Environment}
      AlarmActions:
        - !Ref AlertsTopic
      AlarmDescription: "Alarm when CPU exceeds 80%"
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 80
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: AlertType
          Value: infrastructure

  HighMemoryAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub FinancialPulse-HighMemory-${Environment}
      AlarmActions:
        - !Ref AlertsTopic
      AlarmDescription: "Alarm when memory usage exceeds 85%"
      MetricName: mem_used_percent
      Namespace: CWAgent
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 85
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: AlertType
          Value: infrastructure


  # Custom Metric Filters for Application Logs
  ErrorLogMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref FinancialPulseApplicationLogGroup
      FilterPattern: "ERROR"
      MetricTransformations:
        - MetricNamespace: Financial-Pulse/Application
          MetricName: ErrorCount
          MetricValue: "1"
          DefaultValue: 0

  WarnLevelFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref FinancialPulseApplicationLogGroup
      FilterPattern: 'WARN'
      MetricTransformations:
        - MetricNamespace: Financial-Pulse/Application
          MetricName: WarnCount
          MetricValue: "1"
          DefaultValue: 0

  ExceptionLogMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref FinancialPulseApplicationLogGroup
      FilterPattern: "%[Ee][Xx][Cc][Ee][Pp][Tt][Ii][Oo][Nn]%"
      MetricTransformations:
        - MetricNamespace: Financial-Pulse/Application
          MetricName: ExceptionCount
          MetricValue: "1"
          DefaultValue: 0

  ApplicationStartFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref FinancialPulseApplicationLogGroup
      FilterPattern: '"Started FpAccountApplication"'
      MetricTransformations:
        - MetricNamespace: Financial-Pulse/Application
          MetricName: ApplicationStarts
          MetricValue: "1"
          DefaultValue: 0

  HighErrorCountAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub FinancialPulse-HighErrorCount-${Environment}
      AlarmActions:
        - !Ref AlertsTopic
      AlarmDescription: "Alarm when error count exceeds 10 in 5 minutes"
      MetricName: ErrorCount
      Namespace: Financial-Pulse/Application
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 5
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: AlertType
          Value: application

  HighExceptionCountAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub FinancialPulse-HighExceptionCount-${Environment}
      AlarmActions:
        - !Ref AlertsTopic
      AlarmDescription: "Alarm when exception count exceeds 5 in 5 minutes"
      MetricName: ExceptionCount
      Namespace: Financial-Pulse/Application
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 5
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: AlertType
          Value: application


Outputs:
  FinancialPulseApplicationLogGroupName:
    Description: CloudWatch Log Group for Financial Pulse Application
    Value: !Ref FinancialPulseApplicationLogGroup
    Export:
      Name: !Sub ${AWS::StackName}-FinancialPulseApplicationLogGroup

  # Dashboard
  DashboardName:
    Description: CloudWatch Dashboard Name
    Value: !Ref FinancialPulseOverviewDashboard
    Export:
      Name: !Sub ${AWS::StackName}-DashboardName

  # SNS Topic
  AlertsTopicArn:
    Description: SNS Topic ARN for alerts
    Value: !Ref AlertsTopic
    Export:
      Name: !Sub ${AWS::StackName}-AlertsTopicArn

  # CloudWatch Configuration
  LogRetentionDays:
    Description: Log retention period in days
    Value: !Ref RetentionInDays
    Export:
      Name: !Sub ${AWS::StackName}-LogRetentionDays